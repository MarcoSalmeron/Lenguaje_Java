/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Marco
 */
public class ELIMINAR extends javax.swing.JFrame {
     List<String> lista1;
    /**
     * Creates new form ELIMINAR
     */
   
    public ELIMINAR(List<String> lista1) {
        initComponents();
        this.lista1 = lista1;
        TXTAREA.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TXTAREA = new javax.swing.JTextArea();
        BUSCAR = new javax.swing.JButton();
        TXT1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ELIMINAR NOTAS");

        TXTAREA.setColumns(20);
        TXTAREA.setRows(5);
        jScrollPane1.setViewportView(TXTAREA);

        BUSCAR.setText("ELIMINAR");
        BUSCAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUSCARActionPerformed(evt);
            }
        });

        TXT1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXT1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(35, 35, 35)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(TXT1)
                            .addGap(18, 18, 18)
                            .addComponent(BUSCAR)
                            .addGap(274, 274, 274))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 27, Short.MAX_VALUE))))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(213, 213, 213)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(27, 27, 27)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TXT1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BUSCAR))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TXT1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXT1ActionPerformed

    }//GEN-LAST:event_TXT1ActionPerformed

    private void BUSCARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BUSCARActionPerformed
      //meter text field en variable//
        String Titulo = TXT1.getText();
if (Titulo.isEmpty()) {
    
//verificar que no este vacio//
    JOptionPane.showMessageDialog(null, "No puedes buscar si está vacía la celda", "ERROR 404", JOptionPane.ERROR_MESSAGE);
} else {

// Convertir el texto del campo a entero para seleccionar
int opc = Integer.parseInt(Titulo);
// Auxiliar para detectar el título buscado
boolean tituloExistente = false;
StringBuilder datos = new StringBuilder();

// Enumerar y mostrar todas las notas
for (int i = 0; i < lista1.size(); i++) {
    datos.append(i + 1).append(":    \n").append(lista1.get(i)).append("\n\n");
}

// Buscar la opción en la lista y eliminar la información asociada
if (opc > 0 && opc <= lista1.size()) {
    lista1.remove(opc - 1); // Elimina la información de la nota seleccionada
    tituloExistente = true;
}

// Si se encontró el título, mostrar mensaje de éxito
if (tituloExistente) {
   JOptionPane.showMessageDialog(null, "Nota eliminada exitosamente");
} else {
    JOptionPane.showMessageDialog(null, "El título no fue encontrado", "ERROR", JOptionPane.ERROR_MESSAGE);
}





}
TXT1.setText("");
    }//GEN-LAST:event_BUSCARActionPerformed

   
    //mostrar datos en primera ventana///
  public void datos(List<String> lista1) {
    StringBuilder datos = new StringBuilder();
    for (int i = 0; i < lista1.size(); i++) {
        datos.append(i + 1).append(". ").append(lista1.get(i)).append("\n\n");
    }
   TXTAREA.setText(datos.toString());
}
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BUSCAR;
    private javax.swing.JTextField TXT1;
    private javax.swing.JTextArea TXTAREA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
