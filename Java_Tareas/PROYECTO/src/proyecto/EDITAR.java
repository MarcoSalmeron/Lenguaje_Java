/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Marco
 */
public class EDITAR extends javax.swing.JFrame {

    /**
     * Creates new form EDITAR
     */
  List<String> lista1;
  //Atributos Compartidos//
  String Titulo, Prioridad, Descripcion; 

  
    public EDITAR(List<String> lista1, String Titulo, String Prioridad, String Descripcion) {
       initComponents();
       this.lista1 = lista1;
       this.Titulo = Titulo;
       this.Prioridad = Prioridad;
       this.Descripcion = Descripcion;
       jTextArea1.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        editar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Editar Notas");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        editar.setText("EDITAR");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });

        jLabel1.setText("Ingresar el numero de Nota");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(245, 245, 245)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(238, 238, 238)
                                .addComponent(editar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(198, 198, 198)
                                .addComponent(jLabel1)))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addComponent(editar)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed

     

 // Convertir el texto del campo a entero para seleccionar
int opc = Integer.parseInt(JOptionPane.showInputDialog("Digite el número de la nota a editar"));

// Validar que el índice esté en el rango de la lista
if (opc > 0 && opc <= lista1.size()) {
    // Solicitar los nuevos valores para la nota
    String nuevoTitulo = JOptionPane.showInputDialog("Digite el nuevo Titulo");
    String nuevaPrioridad = JOptionPane.showInputDialog("Digite la nueva Prioridad");
    String nuevaDescripcion = JOptionPane.showInputDialog("Digite la nueva descripcion");
    //crear formato de fecha para el registro de notas editadas//
      Date fecha = new Date();
      SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy-HH:mm:ss");
      String NFecha = formato.format(fecha);
    // Actualizar la nota seleccionada
    lista1.set(opc - 1, NFecha + "  **NOTA EDITADA** \n                                                   TITULO:                                \n"+nuevoTitulo+ "\n                                                   PRIORIDAD:                                              \n"+nuevaPrioridad+ "\n                                                  DESCRIPCION:                 \n"+nuevaDescripcion) ;
    
    // Mostrar un mensaje de éxito
    JOptionPane.showMessageDialog(null, "Nota editada exitosamente");
} else {
    // Mostrar un mensaje de error si el índice no es válido
    JOptionPane.showMessageDialog(null, "El número de la nota no es válido", "ERROR", JOptionPane.ERROR_MESSAGE);
}



    
    }//GEN-LAST:event_editarActionPerformed
public void datos(List<String> lista1) {
    StringBuilder datos = new StringBuilder();
    for (int i = 0; i < lista1.size(); i++) {
        datos.append(i + 1).append(":   \n").append(lista1.get(i)).append("\n\n");
    }
    jTextArea1.setText(datos.toString());
}

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton editar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
